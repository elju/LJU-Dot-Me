// Central stylesheet for Luke Underwood's (elju's) personal site.
// url:  http://elju.me


@import 'main.css';
@import 'basic.less';
@import 'navbar.less';
@import 'art.less';
@import 'code.less';
@import 'other.less';
@import 'blog.less';
@import 'mixins.less';

@stretch: 2.4;
@skewAngle: 45deg;
@amount-to-right: 0%;
@subwindow-offset: ((@amount-to-right)*-1);

h1 {
    text-shadow: 0 1px 3px rgba(0,0,0,0.4), 0 0 30px rgba(0,0,0,0.075);
}

#help {
    -moz-transition: opacity 2s;
    -ms-transition: opacity 2s;
    -webkit-transition: opacity 2s;
    font-size: 30pt;
    line-height: 1;
    opacity: 1;
    position: absolute;
    text-align:center;
    top: 40%;
    transition: opacity 2s;
    width: 80%;
    z-index: 1000;
}

* {
    margin: 0;
    padding: 0;
}

.container-fluid {
    margin: 0px 10px;
}

.slice:hover {
    box-shadow: inset 0 0 10px 0 rgba(255,255,255,0.2);
}

.go .slice:hover {
    box-shadow: none;
}

//  I set up the warp mesh first and then place the
//  subwindows inside of it.  The warp mesh itself is
//  200% of the screen and scooted over 17% to the left
//  @amount-to-right. All of this happens within the
//  .transformtranslate() mixin in mixins.less.
//  Order of operations on the transformations matters,
//  and winds up being super important to keep track of.

#one:hover {
    // background: spin(@firstcolor, 180);
    background: rgb(250,250,250);
}
#two:hover {
    // background: spin(@secondcolor, 180);
    background: rgb(250,250,250);
}
#three:hover {
    // background: spin(@thirdcolor, 180);
    background: rgb(250,250,250);
}
#four:hover {
    // background: spin(@fourthcolor, 180);
    background: rgb(250,250,250);
}

#warp {
    height: 100%;
    position: relative;
    .transorig;
    .transition(0.8s);
    .transformtranslate((@amount-to-right),((-1)*@skewAngle), @stretch); //shift left, skew in the reverse of the variable, and stretch by 2
    > .slice {
        // border-left: solid #222 1pt;
        // border-right: solid #222 1pt;
        // -moz-transition: background 0.1s, -moz-transform 0.8s;
        // -ms-transition: background 0.1s, transform 0.8s;
        // -o-transition: background 0.1s, transform 0.8s;
        // -webkit-transition: background 0.1s, -webkit-transform 0.8s;
        // .transorig; // this makes the animations work smoothly and not be all fucked up on webkit
        cursor: pointer;
        float: left;
        height: 100%;
        overflow: hidden; // fixes a chrome bug where it was saying #two was like 15,000 px.
        position: relative; // this fixes a webkit bug where it can't see anchor elements otherwise.
        // transition: background 0.1s, transfrom 0.8s;
        width: 24.999%;
        // for some reason you have to include
        // it even though it's not animated.
    }
}
.subwindow {
    overflow: hidden;
}

.subwindow {
    .transition(0.8s);
    .transorig;
    height: 100%;
    position: absolute;
    width: 400%;
    > div {
        margin-top: 0px;
    }
}

/* We care which slice we're in, because we have to translateX each subwindo back to the viewport a different amount. */ 

#warp {
    #one .subwindow {
        .transformtranslaterev((@subwindow-offset), @skewAngle, (1/@stretch));
    }

    #two .subwindow {
        .transformtranslaterev((@subwindow-offset) - 25%, @skewAngle, (1/@stretch));
    }

    #three .subwindow {
        .transformtranslaterev((@subwindow-offset) - 50%, @skewAngle, ((1/@stretch) - 0.00003));
    }

    #four .subwindow {
        .transformtranslaterev((@subwindow-offset) - 75%, @skewAngle, (1/@stretch));
    }
}


#warp.go {
    &.goone {
        .transformtranslate(0%, 0, 4.0001);
    }
    &.gotwo {
        .transformtranslate(-25.04%, 0, 4.0001);
    }
    &.gothree {
        .transformtranslate(-50.04%, 0, 4.01);
    }
    &.gofour {
        .transformtranslate(-75.04%, 0, 4.0001);
    }

    #one .subwindow,
    #two .subwindow,
    #three .subwindow,
    #four .subwindow {
        .transformtranslate(0%, 0deg, 0.25);
    }

    > .slice {
        -moz-transition: background 0.3s, -moz-transform 0.8s;
        -ms-transition: background 0.3s, transform 0.8s;
        -o-transition: background 0.3s, transform 0.8s;
        -webkit-transition: background 0.3s, -webkit-transform 0.8s;
        // border: solid transparent 0px;
        overflow-x: none; // this continues correcting for the Webkit browser glitch.
        transition: background 0.3s, transfrom 0.8s;
        width: 25%;
        .subwindow {
            overflow: auto;
        }
    }

    > .spacer {
        -webkit-transition: opacity 0.8s, -webkit-transform 0.8s;
        -moz-transition: opacity 0.8s, -moz-transform 0.8s;
        -ms-transition: opacity 0.8s, transform 0.8s;
        -o-transition: opacity 0.8s, transform 0.8s;
        transition: opacity 0.8s, transfrom 0.8s;
        opacity: 0;
        width: 0px;
    }

    .scrollEnabled {
        overflow-y: auto;
    }

    .left1 > .subwindow {
        .transformtranslate(100%, 0deg, 0.25);
    }

    .left2 > .subwindow {
        .transformtranslate(200%, 0deg, 0.25);
    }

    .left3 > .subwindow {
        .transformtranslate(300%, 0deg, 0.25);
    }

    .right1 > .subwindow {
        .transformtranslate(-100%, 0deg, 0.25);
    }

    .right2 > .subwindow {
        .transformtranslate(-200%, 0deg, 0.25);
    }

    .right3 > .subwindow {
        .transformtranslate(-300%, 0deg, 0.25);
    }

}

.clearfix:after {
    clear: both;
    content: " ";
    display: block;
    height: 0;
}

@media screen and (max-aspect-ratio: 17/10) {
    @stretch: 3;
    @skewAngle: 0deg;
    @amount-to-right: 0%;
    @subwindow-offset: ((@amount-to-right)*-1);

    #warp {
        .transformtranslate((@amount-to-right),((-1)*@skewAngle), @stretch); //shift left, skew in the reverse of the variable, and stretch by 2
    }

    #one > .subwindow {
        .transformtranslaterev((@subwindow-offset), @skewAngle, (1/@stretch));
    }

    #two > .subwindow {
        .transformtranslaterev((@subwindow-offset) - 25%, @skewAngle, (1/@stretch));
    }

    #three > .subwindow {
        .transformtranslaterev((@subwindow-offset) - 50%, @skewAngle, (1/@stretch));
    }

    #four > .subwindow {
        .transformtranslaterev((@subwindow-offset) - 75%, @skewAngle, (1/@stretch));
    }
}

@media screen and (max-aspect-ratio: 1/1) {
    @stretch: 1;
    @skewAngle: 0deg;
    @amount-to-right: 0%;
    @subwindow-offset: ((@amount-to-right) * -1);

    #warp {
        .transformtranslate((@amount-to-right),((-1)*@skewAngle), @stretch); //shift left, skew in the reverse of the variable, and stretch by 2
    }
    #one > .subwindow {
        .transformtranslaterev((@subwindow-offset), @skewAngle, (1/@stretch));
    }

    #two > .subwindow {
        .transformtranslaterev((@subwindow-offset) - 25%, @skewAngle, (1/@stretch));
    }

    #three > .subwindow {
        .transformtranslaterev((@subwindow-offset) - 50%, @skewAngle, (1/@stretch));
    }

    #four > .subwindow {
        .transformtranslaterev((@subwindow-offset) - 75%, @skewAngle, (1/@stretch));
    }
}

@media screen and (max-width: 800px) {
    body { padding: 5px; }

    #help {
        line-height: 1;
        padding: 0 0 0 14pt;
    }
}
